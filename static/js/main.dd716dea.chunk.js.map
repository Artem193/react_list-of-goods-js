{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","goodVisible","setGoodVisible","sortField","setSortField","classButton","buttonName","classButtonActive","includes","className","type","onClick","sort","a","b","localeCompare","length","reverse","split","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAsCC,mBAASF,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAoCMC,EAAc,SAACC,EAAYC,GAC/B,OAAIJ,EAAUK,SAASF,GACdC,EAGH,GAAN,OAAUA,EAAV,cAGF,OACE,sBAAKE,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWJ,EAAY,WAAY,kBACnCM,QAhDa,WACfR,EAAUK,SAAS,YACrBN,EAAe,YAAID,GAAaW,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,cAAcF,OAC/DT,EAAa,sBAEbF,EAAe,YAAID,GAAaW,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,OAC/DV,EAAa,cAuCX,iCAQA,wBACEM,KAAK,SACLD,UAAWJ,EAAY,SAAU,qBACjCM,QA9CW,WACbR,EAAUK,SAAS,YACrBN,EAAe,YAAID,GAAaW,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEE,OAASH,EAAEG,WAC5DZ,EAAa,oBAEbF,EAAe,YAAID,GAAaW,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,WAC5DZ,EAAa,YAqCX,4BAQA,wBACEM,KAAK,SACLD,UAAWJ,EAAY,UAAW,qBAClCM,QA5CQ,WACdT,EAAe,YAAID,GAAagB,WAC5Bd,EAAUK,SAAS,WACrBJ,EAAaD,EAAUe,MAAM,KAAK,IAElCd,EAAa,GAAD,OAAID,EAAJ,cAoCV,qBAQCA,EAAUa,OAAS,GAEhB,wBACEN,KAAK,SACLD,UAAU,4BACVE,QA7CE,WACZT,EAAeJ,GACfM,EAAa,KAwCL,sBAWN,6BACGH,EAAYkB,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCtGzDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dd716dea.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [goodVisible, setGoodVisible] = useState(goodsFromServer);\n  const [sortField, setSortField] = useState('');\n\n  const sortAlphabet = () => {\n    if (sortField.includes('reverse')) {\n      setGoodVisible([...goodVisible].sort((a, b) => b.localeCompare(a)));\n      setSortField('alphabet reverse');\n    } else {\n      setGoodVisible([...goodVisible].sort((a, b) => a.localeCompare(b)));\n      setSortField('alphabet');\n    }\n  };\n\n  const sortLength = () => {\n    if (sortField.includes('reverse')) {\n      setGoodVisible([...goodVisible].sort((a, b) => b.length - a.length));\n      setSortField('length reverse');\n    } else {\n      setGoodVisible([...goodVisible].sort((a, b) => a.length - b.length));\n      setSortField('length');\n    }\n  };\n\n  const reverse = () => {\n    setGoodVisible([...goodVisible].reverse());\n    if (sortField.includes('reverse')) {\n      setSortField(sortField.split(' ')[0]);\n    } else {\n      setSortField(`${sortField} reverse`);\n    }\n  };\n\n  const reset = () => {\n    setGoodVisible(goodsFromServer);\n    setSortField('');\n  };\n\n  const classButton = (buttonName, classButtonActive) => {\n    if (sortField.includes(buttonName)) {\n      return classButtonActive;\n    }\n\n    return `${classButtonActive} is-light`;\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classButton('alphabet', 'button is-info')}\n          onClick={sortAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classButton('length', 'button is-success')}\n          onClick={sortLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classButton('reverse', 'button is-warning')}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {sortField.length > 0\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {goodVisible.map(good => <li data-cy=\"Good\" key={good}>{good}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}