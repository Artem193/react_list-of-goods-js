{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","rev","alphabet","length","App","useState","visibleGoods","setVisibleGoods","sortField","setSortField","classButton","buttonName","classButtonActive","includes","className","type","onClick","sort","a","b","localeCompare","reverse","split","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,UACNC,EAAW,WAEXC,EAAS,SAGTC,EAAM,WACjB,MAAwCC,mBAASL,GAAjD,mBAAOM,EAAP,KAAqBC,EAArB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAoCMC,EAAc,SAACC,EAAYC,GAC/B,OAAIJ,EAAUK,SAASF,GACdC,EAGH,GAAN,OAAUA,EAAV,cAGF,OACE,sBAAKE,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWJ,EAAYR,EAAU,kBACjCc,QAhDa,WACfR,EAAUK,SAASZ,IACrBM,EAAgB,YAAID,GAAcW,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,cAAcF,OACjET,EAXqB,sBAarBF,EAAgB,YAAID,GAAcW,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,OACjEV,EAAaP,KAuCX,iCAQA,wBACEa,KAAK,SACLD,UAAWJ,EAAYP,EAAQ,qBAC/Ba,QA9CW,WACbR,EAAUK,SAASZ,IACrBM,EAAgB,YAAID,GAAcW,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEhB,OAASe,EAAEf,WAC9DM,EAnBmB,oBAqBnBF,EAAgB,YAAID,GAAcW,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEf,OAASgB,EAAEhB,WAC9DM,EAAaN,KAqCX,4BAQA,wBACEY,KAAK,SACLD,UAAWJ,EAAYT,EAAK,qBAC5Be,QA5CQ,WACdT,EAAgB,YAAID,GAAce,WAC9Bb,EAAUK,SAASZ,GACrBQ,EAAaD,EAAUc,MAAM,KAAK,IAElCb,EAAa,GAAD,OAAID,EAAJ,YAAiBP,KAoC3B,qBAQCO,EAAUL,OAAS,GAClB,wBACEY,KAAK,SACLD,UAAU,4BACVE,QA5CI,WACZT,EAAgBP,GAChBS,EAAa,KAuCP,sBAUJ,6BACGH,EAAaiB,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC1G1DC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8a1f43ec.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const rev = 'reverse';\nexport const alphabet = 'alphabet';\nexport const alphabetRev = 'alphabet reverse';\nexport const length = 'length';\nexport const lengthRev = 'length reverse';\n\nexport const App = () => {\n  const [visibleGoods, setVisibleGoods] = useState(goodsFromServer);\n  const [sortField, setSortField] = useState('');\n\n  const sortAlphabet = () => {\n    if (sortField.includes(rev)) {\n      setVisibleGoods([...visibleGoods].sort((a, b) => b.localeCompare(a)));\n      setSortField(alphabetRev);\n    } else {\n      setVisibleGoods([...visibleGoods].sort((a, b) => a.localeCompare(b)));\n      setSortField(alphabet);\n    }\n  };\n\n  const sortLength = () => {\n    if (sortField.includes(rev)) {\n      setVisibleGoods([...visibleGoods].sort((a, b) => b.length - a.length));\n      setSortField(lengthRev);\n    } else {\n      setVisibleGoods([...visibleGoods].sort((a, b) => a.length - b.length));\n      setSortField(length);\n    }\n  };\n\n  const reverse = () => {\n    setVisibleGoods([...visibleGoods].reverse());\n    if (sortField.includes(rev)) {\n      setSortField(sortField.split(' ')[0]);\n    } else {\n      setSortField(`${sortField} ${rev}`);\n    }\n  };\n\n  const reset = () => {\n    setVisibleGoods(goodsFromServer);\n    setSortField('');\n  };\n\n  const classButton = (buttonName, classButtonActive) => {\n    if (sortField.includes(buttonName)) {\n      return classButtonActive;\n    }\n\n    return `${classButtonActive} is-light`;\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classButton(alphabet, 'button is-info')}\n          onClick={sortAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classButton(length, 'button is-success')}\n          onClick={sortLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classButton(rev, 'button is-warning')}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {sortField.length > 0 && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => <li data-cy=\"Good\" key={good}>{good}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}